trait Node {
    def traverse()
}
trait Leaf extends Node {
    Int data
    def traverse() {
        print(data)
    }
}
trait Tree extends Node {
    Node left
    Node right
    Node parent
    def traverse() {
        left.traverse()
        right.traverse()
    }
}

object BinaryTree as Tree {
    override Node left
    override Node right
    override Node parent
}

object LeafImpl as Leaf {
    override Int data = 1
}

def main() {
    var tree = BinaryTree()
    tree.left = LeafImpl()
    tree.left.data = 5
    var tree2 = BinaryTree()
    tree2.parent = tree
    tree.right = tree2
    tree2.left = LeafImpl()
    tree2.right = LeafImpl()

    tree.traverse()
}
